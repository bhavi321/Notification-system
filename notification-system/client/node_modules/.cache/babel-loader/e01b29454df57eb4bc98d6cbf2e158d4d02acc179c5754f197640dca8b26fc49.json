{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Bhavi\\\\Starportal-project\\\\notification-system\\\\client\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n\n  // Establish socket connection on component mount\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const newSocket = io(\"http://localhost:3001\", {\n        auth: {\n          token\n        }\n      });\n      setSocket(newSocket);\n      fetch(\"http://localhost:3000/api/notifications\", {\n        // Fetch notifications from backend\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => {\n        setNotifications(data); // Set fetched notifications to state\n      }).catch(error => {\n        console.error(\"Error fetching notifications:\", error);\n      });\n      // Cleanup on unmount\n      return () => newSocket.close();\n    }\n  }, []);\n\n  // Handle button click\n  const handleClick = async () => {\n    if (socket) {\n      const response = await fetch(\"http://localhost:3000/api/notifications\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      console.log(\"Success:\", data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-3\",\n      onClick: handleClick,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map((notification // Render notifications from state\n      ) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notification.message\n      }, notification._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this) // Display each notification message\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"tasKhUVZFmqQO0a5e3djWnh1Ycs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","Home","_s","inputValue","setInputValue","socket","setSocket","token","localStorage","getItem","newSocket","auth","fetch","method","headers","Authorization","then","response","ok","Error","json","data","setNotifications","catch","error","console","close","handleClick","body","JSON","stringify","message","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","notifications","map","notification","_id","_c","$RefreshReg$"],"sources":["D:/Other/Bhavi/Starportal-project/notification-system/client/src/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nfunction Home() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  // Establish socket connection on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const newSocket = io(\"http://localhost:3001\", {\r\n        auth: { token },\r\n      });\r\n      setSocket(newSocket);\r\n      fetch(\"http://localhost:3000/api/notifications\", { // Fetch notifications from backend\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setNotifications(data); // Set fetched notifications to state\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching notifications:\", error);\r\n      });\r\n      // Cleanup on unmount\r\n      return () => newSocket.close();\r\n    }\r\n  }, []);\r\n\r\n  // Handle button click\r\n  const handleClick = async () => {\r\n    if (socket) {\r\n      const response = await fetch(\"http://localhost:3000/api/notifications\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ message: inputValue }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Success:\", data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Send Notification</h2>\r\n      <div className=\"form-group\">\r\n        <label>Input</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <button className=\"btn btn-primary mt-3\" onClick={handleClick}>\r\n        Send\r\n      </button>\r\n      <h2 className=\"mt-5\">Notifications</h2>\r\n      <ul>\r\n        {notifications.map(\r\n          (\r\n            notification // Render notifications from state\r\n          ) => (\r\n            <li key={notification._id}>{notification.message}</li> // Display each notification message\r\n          )\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,MAAMG,SAAS,GAAGZ,EAAE,CAAC,uBAAuB,EAAE;QAC5Ca,IAAI,EAAE;UAAEJ;QAAM;MAChB,CAAC,CAAC;MACFD,SAAS,CAACI,SAAS,CAAC;MACpBE,KAAK,CAAC,yCAAyC,EAAE;QAAE;QACjDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUR,KAAK;QAChC;MACF,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACZC,gBAAgB,CAACD,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;MACF;MACA,OAAO,MAAMd,SAAS,CAACgB,KAAK,CAAC,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAItB,MAAM,EAAE;MACV,MAAMY,QAAQ,GAAG,MAAML,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUP,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD,CAAC;QACDmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE5B;QAAW,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAI,CAACc,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAME,IAAI,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCK,OAAO,CAACO,GAAG,CAAC,UAAU,EAAEX,IAAI,CAAC;IAC/B;EACF,CAAC;EAED,oBACErB,OAAA;IAAKiC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlC,OAAA;MAAAkC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtC,OAAA;MAAKiC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBlC,OAAA;QAAAkC,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBtC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,cAAc;QACxBO,KAAK,EAAErC,UAAW;QAClBsC,QAAQ,EAAGC,CAAC,IAAKtC,aAAa,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtC,OAAA;MAAQiC,SAAS,EAAC,sBAAsB;MAACW,OAAO,EAAEjB,WAAY;MAAAO,QAAA,EAAC;IAE/D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtC,OAAA;MAAIiC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCtC,OAAA;MAAAkC,QAAA,EACGW,aAAa,CAACC,GAAG,CAChB,CACEC,YAAY,CAAC;MAAA,kBAEb/C,OAAA;QAAAkC,QAAA,EAA4Ba,YAAY,CAAChB;MAAO,GAAvCgB,YAAY,CAACC,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAAC,CAAC;MAE3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACpC,EAAA,CApFQD,IAAI;AAAAgD,EAAA,GAAJhD,IAAI;AAsFb,eAAeA,IAAI;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}