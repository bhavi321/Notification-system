{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Bhavi\\\\Starportal-project\\\\project\\\\Notification-system1\\\\notification-system\\\\client\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [notifications, setNotifications] = useState([]); // Added state for notifications\n  const [fetchedNotifications, setFetchedNotifications] = useState([]);\n  const [expandedNotification, setExpandedNotification] = useState(null);\n\n  // Establish socket connection on component mount\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const newSocket = io(\"http://localhost:3001\", {\n        auth: {\n          token\n        }\n      });\n      setSocket(newSocket);\n      // Fetch notifications from backend\n      newSocket.on(\"broadcastNotification\", payload => {\n        // Add the new message to the messages state\n        console.log(\"inside socket.on\", payload);\n        setNotifications(prevMessages => [...prevMessages, {\n          message: payload.message\n        }]);\n      });\n\n      // Cleanup on unmount\n      return () => newSocket.close();\n    }\n  }, []);\n  const handleClick = async () => {\n    console.log(localStorage.getItem(\"token\"));\n    socket.emit(\"clickSend\", inputValue);\n    if (socket) {\n      const response = await fetch(\"http://localhost:3000/api/notifications\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      console.log(\"Success:\", data);\n    }\n  };\n  const fetchNotifications = async () => {\n    const token = localStorage.getItem(\"token\");\n    const response = await fetch(\"http://localhost:3000/api/notifications\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    setFetchedNotifications(data);\n  };\n  const handleExpand = async (id, notificationId) => {\n    // setExpandedNotification(expandedNotification === id ? null : id);\n\n    if (expandedNotification === notificationId) {\n      setExpandedNotification(null);\n    } else {\n      setExpandedNotification(notificationId);\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await fetch(`http://localhost:3000/api/notifications/${notificationId}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        console.log(\"Notification marked as read\");\n      } catch (error) {\n        console.error(\"Error marking notification as read:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Hi \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Notificationss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map((notification // Render notifications from state\n      ) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notification.message\n      }, notification._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this) // Display each notification  message\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-3\",\n      onClick: handleClick,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mt-3\",\n      onClick: fetchNotifications,\n      children: \"Get Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetched Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"fetched-notifications-list\",\n      children: fetchedNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"notification-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleExpand(notification.userId._id, notification._id),\n          children: notification.userId.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), expandedNotification === notification._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-message\",\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)]\n      }, notification.userId._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"2HYKevtL6s9dFwka2y1pPko7HJY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","Home","_s","inputValue","setInputValue","socket","setSocket","notifications","setNotifications","fetchedNotifications","setFetchedNotifications","expandedNotification","setExpandedNotification","token","localStorage","getItem","newSocket","auth","on","payload","console","log","prevMessages","message","close","handleClick","emit","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","data","json","fetchNotifications","handleExpand","id","notificationId","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","_id","type","value","onChange","e","target","onClick","userId","username","_c","$RefreshReg$"],"sources":["D:/Other/Bhavi/Starportal-project/project/Notification-system1/notification-system/client/src/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Home.css\";\r\nfunction Home() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [notifications, setNotifications] = useState([]); // Added state for notifications\r\n  const [fetchedNotifications, setFetchedNotifications] = useState([]);\r\n  const [expandedNotification, setExpandedNotification] = useState(null);\r\n\r\n  // Establish socket connection on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const newSocket = io(\"http://localhost:3001\", {\r\n        auth: { token },\r\n      });\r\n      setSocket(newSocket);\r\n      // Fetch notifications from backend\r\n      newSocket.on(\"broadcastNotification\", (payload) => {\r\n        // Add the new message to the messages state\r\n        console.log(\"inside socket.on\", payload);\r\n        setNotifications((prevMessages) => [\r\n          ...prevMessages,\r\n          { message: payload.message },\r\n        ]);\r\n      });\r\n\r\n      // Cleanup on unmount\r\n      return () => newSocket.close();\r\n    }\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    console.log(localStorage.getItem(\"token\"));\r\n    socket.emit(\"clickSend\", inputValue);\r\n    if (socket) {\r\n      const response = await fetch(\"http://localhost:3000/api/notifications\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ message: inputValue }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Success:\", data);\r\n    }\r\n  };\r\n  const fetchNotifications = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await fetch(\"http://localhost:3000/api/notifications\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Network response was not ok\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    setFetchedNotifications(data);\r\n  };\r\n\r\n  const handleExpand = async (id, notificationId) => {\r\n    // setExpandedNotification(expandedNotification === id ? null : id);\r\n\r\n    if (expandedNotification === notificationId) {\r\n      setExpandedNotification(null);\r\n    } else {\r\n      setExpandedNotification(notificationId);\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await fetch(\r\n          `http://localhost:3000/api/notifications/${notificationId}`,\r\n          {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n\r\n        console.log(\"Notification marked as read\");\r\n      } catch (error) {\r\n        console.error(\"Error marking notification as read:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"mt-5\">Hi {}</h2>\r\n      <h2 className=\"mt-5\">Notificationss</h2>\r\n      <ul>\r\n        {notifications.map(\r\n          (\r\n            notification // Render notifications from state\r\n          ) => (\r\n            <li key={notification._id}>{notification.message}</li> // Display each notification  message\r\n          )\r\n        )}\r\n      </ul>\r\n      <h2>Send Notification</h2>\r\n      <div className=\"form-group\">\r\n        <label>Input</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <button className=\"btn btn-primary mt-3\" onClick={handleClick}>\r\n        Send\r\n      </button>\r\n      <br></br>\r\n      <button className=\"btn btn-secondary mt-3\" onClick={fetchNotifications}>\r\n        Get Notifications\r\n      </button>\r\n      <h2>Fetched Notifications</h2>\r\n      <ul className=\"fetched-notifications-list\">\r\n        {/* const handleExpand = (id) => {\r\n    setExpandedNotification(expandedNotification === id ? null : id); */}\r\n        {fetchedNotifications.map((notification) => (\r\n          <li key={notification.userId._id} className=\"notification-item\">\r\n            <div onClick={() => handleExpand(notification.userId._id, notification._id)}>\r\n              {notification.userId.username}\r\n            </div>\r\n            {expandedNotification === notification._id && (\r\n              <div className=\"notification-message\">{notification.message}</div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}