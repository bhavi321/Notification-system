{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Bhavi\\\\Starportal-project\\\\notification-system\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport \"./App.css\";\n\n// Connect to the server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\", {\n  auth: token\n});\nfunction App() {\n  _s();\n  // State to store the chat messages and the current message input\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  // Effect to handle incoming messages\n  useEffect(() => {\n    // Listen for 'sendNotification' events from the server\n    socket.on(\"sendNotification\", msg => {\n      // Add the new message to the messages state\n      console.log(\"inside socket.on\");\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n\n    // Clean up the effect by removing the event listener\n    return () => {\n      socket.off(\"sendNotification\");\n    };\n  }, []);\n\n  // Function to handle sending a message\n  const sendMessage = async e => {\n    x``;\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const response = await fetch(\"http://localhost:3000/api/notifications\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            message\n          })\n        });\n        if (response.ok) {\n          console.log(\"Message sent successfully\");\n        } else {\n          console.error(\"Failed to send message\");\n        }\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n      // Emit the message to the server\n      // socket.emit('showNotification', message);\n      // Clear the input field\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          autoComplete: \"off\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/dashboard\",\n            component: Dashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cirg1XNVuY5I7aqZjd23CdWZMY0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","BrowserRouter","Router","Route","Switch","Redirect","Login","Dashboard","jsxDEV","_jsxDEV","socket","auth","token","App","_s","messages","setMessages","message","setMessage","on","msg","console","log","prevMessages","off","sendMessage","e","x","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","index","onSubmit","autoComplete","value","onChange","target","exact","path","component","PrivateRoute","_c","$RefreshReg$"],"sources":["D:/Other/Bhavi/Starportal-project/notification-system/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport \"./App.css\";\n\n// Connect to the server\nconst socket = io(\"http://localhost:3001\",{\n  auth: token\n});\n\nfunction App() {\n  // State to store the chat messages and the current message input\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  // Effect to handle incoming messages\n  useEffect(() => {\n    // Listen for 'sendNotification' events from the server\n    socket.on(\"sendNotification\", (msg) => {\n      // Add the new message to the messages state\n      console.log(\"inside socket.on\");\n      setMessages((prevMessages) => [...prevMessages, msg]);\n    });\n\n    // Clean up the effect by removing the event listener\n    return () => {\n      socket.off(\"sendNotification\");\n    };\n  }, []);\n\n  // Function to handle sending a message\n  const sendMessage = async (e) => {x``\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const response = await fetch(\n          \"http://localhost:3000/api/notifications\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ message }),\n          }\n        );\n        if (response.ok) {\n          console.log(\"Message sent successfully\");\n        } else {\n          console.error(\"Failed to send message\");\n        }\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n      // Emit the message to the server\n      // socket.emit('showNotification', message);\n      // Clear the input field\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Chat App</h1>\n        <ul id=\"messages\">\n          {/* Render the list of messages */}\n          {messages.map((msg, index) => (\n            <li key={index}>{msg}</li>\n          ))}\n        </ul>\n        <form id=\"form\" onSubmit={sendMessage}>\n          <input\n            id=\"input\"\n            autoComplete=\"off\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button>Send</button>\n        </form>\n      </header>\n      <Router>\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </div>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGV,EAAE,CAAC,uBAAuB,EAAC;EACxCW,IAAI,EAAEC;AACR,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd;IACAW,MAAM,CAACS,EAAE,CAAC,kBAAkB,EAAGC,GAAG,IAAK;MACrC;MACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXV,MAAM,CAACc,GAAG,CAAC,kBAAkB,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAACC,CAAC,EAAE;IACnCD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAIX,OAAO,CAACY,IAAI,CAAC,CAAC,EAAE;MAClB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yCAAyC,EACzC;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEnB;UAAQ,CAAC;QAClC,CACF,CAAC;QACD,IAAIa,QAAQ,CAACO,EAAE,EAAE;UACfhB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAC1C,CAAC,MAAM;UACLD,OAAO,CAACiB,KAAK,CAAC,wBAAwB,CAAC;QACzC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;MACA;MACA;MACA;MACApB,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACET,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/B,OAAA;MAAQ8B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B/B,OAAA;QAAA+B,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBnC,OAAA;QAAIoC,EAAE,EAAC,UAAU;QAAAL,QAAA,EAEdzB,QAAQ,CAAC+B,GAAG,CAAC,CAAC1B,GAAG,EAAE2B,KAAK,kBACvBtC,OAAA;UAAA+B,QAAA,EAAiBpB;QAAG,GAAX2B,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLnC,OAAA;QAAMoC,EAAE,EAAC,MAAM;QAACG,QAAQ,EAAEvB,WAAY;QAAAe,QAAA,gBACpC/B,OAAA;UACEoC,EAAE,EAAC,OAAO;UACVI,YAAY,EAAC,KAAK;UAClBC,KAAK,EAAEjC,OAAQ;UACfkC,QAAQ,EAAGzB,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAAC0B,MAAM,CAACF,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACFnC,OAAA;UAAA+B,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACTnC,OAAA,CAACP,MAAM;MAAAsC,QAAA,eACP/B,OAAA;QAAK8B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7B/B,OAAA,CAACL,MAAM;UAAAoC,QAAA,gBACL/B,OAAA,CAACN,KAAK;YAACkD,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,SAAS,EAAEjD;UAAM;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1CnC,OAAA,CAAC+C,YAAY;YAACF,IAAI,EAAC,YAAY;YAACC,SAAS,EAAEhD;UAAU;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC9B,EAAA,CAhFQD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AAkFZ,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}