{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Bhavi\\\\Starportal-project\\\\notification-system\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction App() {\n  _s();\n  // State to store the chat messages and the current message input\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Effect to handle incoming messages\n  useEffect(() => {\n    // Listen for 'chat message' events from the server\n    socket.on('sendNotification', msg => {\n      // Add the new message to the messages state\n      console.log(\"inside socket.on\");\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n\n    // Clean up the effect by removing the event listener\n    return () => {\n      socket.off('sendNotification');\n    };\n  }, []);\n\n  // Function to handle sending a message\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const response = await fetch('http://localhost:3000/api/notifications', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message\n          })\n        });\n        if (response.ok) {\n          console.log('Message sent successfully');\n        } else {\n          console.error('Failed to send message');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n      // Emit the message to the server\n      // socket.emit('showNotification', message);\n      // Clear the input field\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          autoComplete: \"off\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9iyGj6dRHK6V1mxAAjlNUec9m4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","message","setMessage","on","msg","console","log","prevMessages","off","sendMessage","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","index","onSubmit","autoComplete","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/Other/Bhavi/Starportal-project/notification-system/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nconst socket = io('http://localhost:3001');\n\nfunction App() {\n  // State to store the chat messages and the current message input\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // Effect to handle incoming messages\n  useEffect(() => {\n    // Listen for 'chat message' events from the server\n    socket.on('sendNotification', (msg) => {\n      // Add the new message to the messages state\n      console.log(\"inside socket.on\")\n      setMessages((prevMessages) => [...prevMessages, msg]);\n    });\n\n    // Clean up the effect by removing the event listener\n    return () => {\n      socket.off('sendNotification');\n    };\n  }, []);\n\n  // Function to handle sending a message\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const response = await fetch('http://localhost:3000/api/notifications', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ message }),\n        });\n        if (response.ok) {\n          console.log('Message sent successfully');\n        } else {\n          console.error('Failed to send message');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n      // Emit the message to the server\n      // socket.emit('showNotification', message);\n      // Clear the input field\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Chat App</h1>\n        <ul id=\"messages\">\n          {/* Render the list of messages */}\n          {messages.map((msg, index) => (\n            <li key={index}>{msg}</li>\n          ))}\n        </ul>\n        <form id=\"form\" onSubmit={sendMessage}>\n          <input\n            id=\"input\"\n            autoComplete=\"off\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button>Send</button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}